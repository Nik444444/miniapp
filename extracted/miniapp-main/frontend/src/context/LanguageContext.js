import React, { createContext, useContext, useState, useEffect } from 'react';
import axios from 'axios';

const LanguageContext = createContext();

const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;

export const useLanguage = () => {
    const context = useContext(LanguageContext);
    if (!context) {
        throw new Error('useLanguage must be used within a LanguageProvider');
    }
    return context;
};

// –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const translations = {
    uk: {
        // –û–±—â–∏–µ
        welcome: "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ B√ºrokrator AI!",
        documentAnalysis: "–ê–Ω–∞–ª—ñ–∑ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤",
        letterComposer: "–°–∫–ª–∞–¥–∞–Ω–Ω—è –ª–∏—Å—Ç—ñ–≤",
        housingSearch: "–ü–æ—à—É–∫ –∂–∏—Ç–ª–∞",
        jobSearch: "–ü–æ—à—É–∫ —Ä–æ–±–æ—Ç–∏",
        marketplace: "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å",
        loading: "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...",
        error: "–ü–æ–º–∏–ª–∫–∞",
        success: "–£—Å–ø—ñ—Ö",
        close: "–ó–∞–∫—Ä–∏—Ç–∏",
        back: "–ù–∞–∑–∞–¥",
        
        // –û–±—â–∏–µ –¥–ª—è –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
        chooseYourLanguage: "–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –¥–ª—è –≤—Å—ñ—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤",
        languageChanged: "–ú–æ–≤–∞ —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–∞",
        languageSelection: "–í–∏–±—ñ—Ä –º–æ–≤–∏",
        languageSelectionDescription: "–¶—è –º–æ–≤–∞ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É",
        
        // –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        analyzeDocuments: "–ê–Ω–∞–ª—ñ–∑ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤",
        aiAnalysis: "AI-–∞–Ω–∞–ª—ñ–∑ –ª–∏—Å—Ç—ñ–≤ —ñ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤",
        uploadDocument: "–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç",
        aiAnalysisInSeconds: "AI-–∞–Ω–∞–ª—ñ–∑ –∑–∞ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥",
        dragFileOrClick: "–ü–µ—Ä–µ—Ç—è–≥–Ω—ñ—Ç—å —Ñ–∞–π–ª –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –≤–∏–±–æ—Ä—É",
        selectFile: "–í–∏–±—Ä–∞—Ç–∏ —Ñ–∞–π–ª",
        analysisLanguage: "–ú–æ–≤–∞ –∞–Ω–∞–ª—ñ–∑—É",
        chooseLanguage: "–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤",
        analyzing: "–ê–Ω–∞–ª—ñ–∑—É—î–º–æ –¥–æ–∫—É–º–µ–Ω—Ç",
        analysisComplete: "–ê–Ω–∞–ª—ñ–∑ –≥–æ—Ç–æ–≤–∏–π",
        
        // –Ø–∑—ã–∫–∏
        ukrainian: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
        russian: "–†—É—Å—Å–∫–∏–π",
        german: "Deutsch",
        
        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
        summary: "–†–µ–∑—é–º–µ",
        details: "–î–µ—Ç–∞–ª—ñ",
        response: "–í—ñ–¥–ø–æ–≤—ñ–¥—å",
        documentContent: "–ó–º—ñ—Å—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞",
        sender: "–í—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫",
        recipient: "–û–¥–µ—Ä–∂—É–≤–∞—á",
        mainTopic: "–û—Å–Ω–æ–≤–Ω–∞ —Ç–µ–º–∞",
        specificFacts: "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Ñ–∞–∫—Ç–∏",
        requirements: "–í–∏–º–æ–≥–∏/–ø—Ä–æ—Ö–∞–Ω–Ω—è",
        dates: "–î–∞—Ç–∏ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω–∏",
        contactInfo: "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è",
        signature: "–ü—ñ–¥–ø–∏—Å —Ç–∞ –ø–µ—á–∞—Ç–∫–∞",
        documentLanguage: "–ú–æ–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
        urgencyLevel: "–†—ñ–≤–µ–Ω—å —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—Å—Ç—ñ",
        
        // –£—Ä–æ–≤–Ω–∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
        high: "–í–ò–°–û–ö–ò–ô",
        medium: "–°–ï–†–ï–î–ù–Ü–ô",
        low: "–ù–ò–ó–¨–ö–ò–ô",
        
        // –û—à–∏–±–∫–∏
        noApiKey: "–î–ª—è –∞–Ω–∞–ª—ñ–∑—É —Ñ–∞–π–ª—ñ–≤ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π API –∫–ª—é—á",
        analysisError: "–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É",
        fileUploadError: "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É",
        authError: "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó",
        connectionError: "–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º",
        
        // –°–æ–æ–±—â–µ–Ω–∏—è
        apiKeyRequired: "–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ API –∫–ª—é—á",
        analysisSuccess: "–ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ! üéâ",
        copiedToClipboard: "–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É!",
        copyError: "–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è"
    },
    
    ru: {
        // –û–±—â–∏–µ
        welcome: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ B√ºrokrator AI!",
        documentAnalysis: "–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        letterComposer: "–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Å–µ–º",
        housingSearch: "–ü–æ–∏—Å–∫ –∂–∏–ª—å—è",
        jobSearch: "–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã",
        marketplace: "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å",
        loading: "–ó–∞–≥—Ä—É–∑–∫–∞...",
        error: "–û—à–∏–±–∫–∞",
        success: "–£—Å–ø–µ—Ö",
        close: "–ó–∞–∫—Ä—ã—Ç—å",
        back: "–ù–∞–∑–∞–¥",
        
        // –û–±—â–∏–µ –¥–ª—è –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
        chooseYourLanguage: "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤",
        languageChanged: "–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω",
        languageSelection: "–í—ã–±–æ—Ä —è–∑—ã–∫–∞",
        languageSelectionDescription: "–≠—Ç–æ—Ç —è–∑—ã–∫ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
        
        // –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        analyzeDocuments: "–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        aiAnalysis: "AI –∞–Ω–∞–ª–∏–∑ –ø–∏—Å–µ–º –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        uploadDocument: "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç",
        aiAnalysisInSeconds: "AI –∞–Ω–∞–ª–∏–∑ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥",
        dragFileOrClick: "–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞",
        selectFile: "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª",
        analysisLanguage: "–Ø–∑—ã–∫ –∞–Ω–∞–ª–∏–∑–∞",
        chooseLanguage: "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
        analyzing: "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç",
        analysisComplete: "–ê–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤",
        
        // –Ø–∑—ã–∫–∏
        ukrainian: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
        russian: "–†—É—Å—Å–∫–∏–π",
        german: "Deutsch",
        
        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
        summary: "–†–µ–∑—é–º–µ",
        details: "–î–µ—Ç–∞–ª–∏",
        response: "–û—Ç–≤–µ—Ç",
        documentContent: "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
        sender: "–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å",
        recipient: "–ü–æ–ª—É—á–∞—Ç–µ–ª—å",
        mainTopic: "–û—Å–Ω–æ–≤–Ω–∞—è —Ç–µ–º–∞",
        specificFacts: "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã",
        requirements: "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è/–ø—Ä–æ—Å—å–±—ã",
        dates: "–î–∞—Ç—ã –∏ —Å—Ä–æ–∫–∏",
        contactInfo: "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        signature: "–ü–æ–¥–ø–∏—Å—å –∏ –ø–µ—á–∞—Ç—å",
        documentLanguage: "–Ø–∑—ã–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
        urgencyLevel: "–£—Ä–æ–≤–µ–Ω—å —Å—Ä–æ—á–Ω–æ—Å—Ç–∏",
        
        // –£—Ä–æ–≤–Ω–∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
        high: "–í–´–°–û–ö–ò–ô",
        medium: "–°–†–ï–î–ù–ò–ô",
        low: "–ù–ò–ó–ö–ò–ô",
        
        // –û—à–∏–±–∫–∏
        noApiKey: "–î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á",
        analysisError: "–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞",
        fileUploadError: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞",
        authError: "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
        connectionError: "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º",
        
        // –°–æ–æ–±—â–µ–Ω–∏—è
        apiKeyRequired: "–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á",
        analysisSuccess: "–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! üéâ",
        copiedToClipboard: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!",
        copyError: "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
    },
    
    de: {
        // –û–±—â–∏–µ
        welcome: "Willkommen bei B√ºrokrator AI!",
        documentAnalysis: "Dokumentenanalyse",
        letterComposer: "Brieferstellung",
        housingSearch: "Wohnungssuche",
        jobSearch: "Jobsuche",
        marketplace: "Marktplatz",
        loading: "Laden...",
        error: "Fehler",
        success: "Erfolg",
        close: "Schlie√üen",
        back: "Zur√ºck",
        
        // –û–±—â–∏–µ –¥–ª—è –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
        chooseYourLanguage: "W√§hlen Sie eine Sprache f√ºr alle Werkzeuge",
        languageChanged: "Sprache erfolgreich ge√§ndert",
        languageSelection: "Sprachauswahl",
        languageSelectionDescription: "Diese Sprache wird f√ºr die Dokumentenanalyse und das Interface verwendet",
        
        // –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        analyzeDocuments: "Dokumente analysieren",
        aiAnalysis: "AI-Analyse von Briefen und Dokumenten",
        uploadDocument: "Dokument hochladen",
        aiAnalysisInSeconds: "AI-Analyse in wenigen Sekunden",
        dragFileOrClick: "Datei hierher ziehen oder klicken zum Ausw√§hlen",
        selectFile: "Datei ausw√§hlen",
        analysisLanguage: "Analysesprache",
        chooseLanguage: "Sprache f√ºr Ergebnisse w√§hlen",
        analyzing: "Dokument wird analysiert",
        analysisComplete: "Analyse fertig",
        
        // –Ø–∑—ã–∫–∏
        ukrainian: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
        russian: "–†—É—Å—Å–∫–∏–π",
        german: "Deutsch",
        
        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
        summary: "Zusammenfassung",
        details: "Details",
        response: "Antwort",
        documentContent: "Dokumentinhalt",
        sender: "Absender",
        recipient: "Empf√§nger",
        mainTopic: "Hauptthema",
        specificFacts: "Konkrete Fakten",
        requirements: "Anforderungen/Bitten",
        dates: "Daten und Fristen",
        contactInfo: "Kontaktinformationen",
        signature: "Unterschrift und Siegel",
        documentLanguage: "Dokumentsprache",
        urgencyLevel: "Dringlichkeitsstufe",
        
        // –£—Ä–æ–≤–Ω–∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
        high: "HOCH",
        medium: "MITTEL",
        low: "NIEDRIG",
        
        // –û—à–∏–±–∫–∏
        noApiKey: "F√ºr die Dateianalyse ist ein API-Schl√ºssel erforderlich",
        analysisError: "Analysefehler",
        fileUploadError: "Fehler beim Hochladen der Datei",
        authError: "Authentifizierungsfehler",
        connectionError: "Verbindungsfehler zum Server",
        
        // –°–æ–æ–±—â–µ–Ω–∏—è
        apiKeyRequired: "Kehren Sie zum Hauptmen√º zur√ºck und konfigurieren Sie den API-Schl√ºssel",
        analysisSuccess: "Analyse erfolgreich abgeschlossen! üéâ",
        copiedToClipboard: "In die Zwischenablage kopiert!",
        copyError: "Kopierfehler"
    }
};

export const LanguageProvider = ({ children }) => {
    const [currentLanguage, setCurrentLanguage] = useState('ru'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
    const [isLanguageSelected, setIsLanguageSelected] = useState(false);

    useEffect(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω —è–∑—ã–∫
        const savedLanguage = localStorage.getItem('selectedLanguage');
        const languageSelected = localStorage.getItem('languageSelected');
        
        if (savedLanguage && languageSelected === 'true') {
            setCurrentLanguage(savedLanguage);
            setIsLanguageSelected(true);
        }
    }, []);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —è–∑—ã–∫–∞ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const loadUserLanguage = async () => {
        try {
            const token = localStorage.getItem('authToken');
            if (token) {
                const response = await axios.get(`${BACKEND_URL}/api/profile`, {
                    headers: {
                        Authorization: `Bearer ${token}`
                    }
                });
                
                const userLanguage = response.data.preferred_language;
                if (userLanguage) {
                    setCurrentLanguage(userLanguage);
                    localStorage.setItem('selectedLanguage', userLanguage);
                    localStorage.setItem('languageSelected', 'true');
                    setIsLanguageSelected(true);
                    console.log('Language loaded from backend:', userLanguage);
                }
            }
        } catch (error) {
            console.error('Error loading language from backend:', error);
        }
    };

    const changeLanguage = async (languageCode) => {
        setCurrentLanguage(languageCode);
        localStorage.setItem('selectedLanguage', languageCode);
        localStorage.setItem('languageSelected', 'true');
        setIsLanguageSelected(true);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —è–∑—ã–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ backend (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)
        try {
            const token = localStorage.getItem('authToken');
            if (token) {
                await axios.post(`${BACKEND_URL}/api/change-language`, {
                    language: languageCode
                }, {
                    headers: {
                        Authorization: `Bearer ${token}`
                    }
                });
                console.log('Language saved to backend:', languageCode);
            }
        } catch (error) {
            console.error('Error saving language to backend:', error);
            // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É, –µ—Å–ª–∏ backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        }
    };

    const t = (key) => {
        return translations[currentLanguage]?.[key] || key;
    };

    const value = {
        currentLanguage,
        changeLanguage,
        loadUserLanguage,
        t,
        isLanguageSelected,
        setIsLanguageSelected
    };

    return (
        <LanguageContext.Provider value={value}>
            {children}
        </LanguageContext.Provider>
    );
};

export default LanguageProvider;