#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ OCR —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤ production
"""
import sys
import os

def test_tesseract():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ tesseract OCR"""
    try:
        import subprocess
        result = subprocess.run(['tesseract', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Tesseract —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", result.stdout.split('\n')[0])
            return True
        else:
            print("‚ùå Tesseract –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ tesseract: {e}")
        return False

def test_python_ocr():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Python OCR –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import pytesseract
        import cv2
        import PIL
        from document_processor import document_processor
        
        print("‚úÖ –í—Å–µ Python OCR –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã")
        return True
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Python OCR: {e}")
        return False

def test_languages():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —è–∑—ã–∫–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"""
    try:
        import subprocess
        result = subprocess.run(['tesseract', '--list-langs'], capture_output=True, text=True)
        if result.returncode == 0:
            langs = result.stdout.strip().split('\n')[1:]
            required = ['rus', 'deu', 'eng', 'ukr']
            missing = [lang for lang in required if lang not in langs]
            
            if not missing:
                print("‚úÖ –í—Å–µ —è–∑—ã–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–∞–π–¥–µ–Ω—ã:", ', '.join(required))
                return True
            else:
                print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —è–∑—ã–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã:", ', '.join(missing))
                return False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —è–∑—ã–∫–æ–≤: {e}")
        return False

if __name__ == "__main__":
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OCR —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    tests = [
        ("Tesseract OCR", test_tesseract),
        ("Python OCR –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏", test_python_ocr),
        ("–Ø–∑—ã–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã", test_languages),
    ]
    
    passed = 0
    total = len(tests)
    
    for name, test_func in tests:
        print(f"\nüìã –¢–µ—Å—Ç: {name}")
        if test_func():
            passed += 1
        else:
            print(f"‚ùå –¢–µ—Å—Ç '{name}' –ø—Ä–æ–≤–∞–ª–µ–Ω")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! OCR –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
        sys.exit(0)
    else:
        print("üí• –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å OCR —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é!")
        sys.exit(1)